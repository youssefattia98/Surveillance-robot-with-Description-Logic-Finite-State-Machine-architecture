<?xml version="1.0" ?>
<robot name="m2wr" xmlns:xacro="https://www.ros.org/wiki/xacro" >
<gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="link_left_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="link_right_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="link_left_wheel_back">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="link_right_wheel_back">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="arm_base_link">
    <material>Gazebo/white</material>
  </gazebo>
  <gazebo reference="arm_link_01">
    <material>Gazebo/white</material>
  </gazebo>
  <gazebo reference="arm_link_02">
    <material>Gazebo/white</material>
  </gazebo>
    <gazebo reference="arm_link_03">
    <material>Gazebo/white</material>
  </gazebo>
      <gazebo reference="arm_link_03">
    <material>Gazebo/white</material>
  </gazebo>


  <gazebo reference="arm_joint_02">
    <provideFeedback>true</provideFeedback>
</gazebo>


<!-- The ft_sensor plugin -->  
<gazebo>
    <plugin name="ft_sensor" filename="libgazebo_ros_ft_sensor.so">
        <updateRate>100.0</updateRate>
        <topicName>ft_sensor_topic</topicName>
        <jointName>arm_joint_02</jointName>
    </plugin>
</gazebo>
 
     <!-- robot control -->
<gazebo>
	  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
	    <updateRate>100.0</updateRate>
	    <robotNamespace>/</robotNamespace>
	    <leftFrontJoint>joint_left_wheel</leftFrontJoint>
	    <rightFrontJoint>joint_right_wheel</rightFrontJoint>
	    <leftRearJoint>joint_left_wheel_back</leftRearJoint>
	    <rightRearJoint>joint_right_wheel_back</rightRearJoint>
	    <wheelSeparation>0.4</wheelSeparation>
	    <wheelDiameter>0.215</wheelDiameter>
	    <robotBaseFrame>base_link</robotBaseFrame>
	    <torque>20</torque>
	    <topicName>cmd_vel</topicName>
	    <broadcastTF>true</broadcastTF>
      <publishOdomTF>true</publishOdomTF>
	  </plugin>
	</gazebo>


      <!-- laser -->
  <gazebo reference="laser">
      <sensor type="ray" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-1.570796</min_angle>
              <max_angle>1.570796</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <!-- Noise parameters based on published spec for Hokuyo laser
                achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                reading. -->
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="hokuyo_node" filename="libgazebo_ros_laser.so">
          <topicName>scan</topicName>
          <frameName>laser</frameName>
        </plugin>
      </sensor>
    </gazebo>


    <!-- arm control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>m2wr</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>

    <!-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.8</horizontal_fov>
        <image>
          <width>2000</width>
          <height>2000</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>2000</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


</robot>

